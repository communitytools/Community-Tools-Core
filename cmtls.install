<?php

/**
 * Implements hook_install()
 *
 * creates the CT taxonomy, menu and adds default fields and configuration settings to group, app, location node types
 */
function cmtls_install() {
  // set the weight so the form alter occurs after menu module
  db_query("UPDATE {system} SET weight = 10 WHERE name = 'cmtls'");

  // group variables
  variable_set('comment_anonymous_cmtls_group', 0);
  variable_set('comment_cmtls_group', 0);
  variable_set('comment_default_mode_cmtls_group', 0);
  variable_set('comment_default_per_page_cmtls_group', 50);
  variable_set('comment_form_location_cmtls_group', 1);
  variable_set('comment_subject_field_cmtls_group', 0);
  variable_set('node_options_cmtls_group', array('status'));
  variable_set('node_preview_cmtls_group', 0);
  variable_set('node_submitted_cmtls_group', 1);
  variable_set('og_group_content_type_cmtls_group', 'omitted');

  // app variables
  variable_set('comment_anonymous_cmtls_app', 0);
  variable_set('comment_cmtls_app', 0);
  variable_set('comment_default_mode_cmtls_app', 0);
  variable_set('comment_default_per_page_cmtls_app', 50);
  variable_set('comment_form_location_cmtls_app', 1);
  variable_set('comment_subject_field_cmtls_app', 0);
  variable_set('node_options_cmtls_app', array('status'));
  variable_set('node_preview_cmtls_app', 1);
  variable_set('node_submitted_cmtls_app', 0);
  variable_set('og_group_type_cmtls_app', 'omitted');

  // location variables
  variable_set('comment_anonymous_cmtls_location', 0);
  variable_set('comment_cmtls_location', 2);
  variable_set('comment_default_mode_cmtls_location', 0);
  variable_set('comment_default_per_page_cmtls_location', 50);
  variable_set('comment_form_location_cmtls_location', 1);
  variable_set('comment_subject_field_cmtls_location', 0);
  variable_set('node_options_cmtls_location', array('status'));
  variable_set('node_preview_cmtls_location', 0);
  variable_set('node_submitted_cmtls_location', 1);
  variable_set('og_group_type_cmtls_location', 'omitted');

  // enable DS view modes
  $settings = variable_get('field_bundle_settings_node__cmtls_group', array());
  $settings['view_modes']['cmtls_teaser']['custom_settings'] = TRUE;
  variable_set('field_bundle_settings_node__cmtls_group', $settings);

  $settings = variable_get('field_bundle_settings_node__cmtls_app', array());
  $settings['view_modes']['cmtls_teaser']['custom_settings'] = TRUE;
  variable_set('field_bundle_settings_node__cmtls_app', $settings);

  $settings = variable_get('field_bundle_settings_node__cmtls_location', array());
  $settings['view_modes']['cmtls_teaser']['custom_settings'] = TRUE;
  $settings['view_modes']['cmtls_location_bare']['custom_settings'] = TRUE;
  variable_set('field_bundle_settings_node__cmtls_location', $settings);

  $settings = variable_get('field_bundle_settings_user__user', array());
  $settings['view_modes']['cmtls_teaser']['custom_settings'] = TRUE;
  variable_set('field_bundle_settings_user__user', $settings);

  $settings = variable_get('field_bundle_settings_comment__comment_node_cmtls_group', array());
  $settings['view_modes']['cmtls_teaser']['custom_settings'] = TRUE;
  variable_set('field_bundle_settings_comment__comment_node_cmtls_group', $settings);

  $settings = variable_get('field_bundle_settings_comment__comment_node_cmtls_app', array());
  $settings['view_modes']['cmtls_teaser']['custom_settings'] = TRUE;
  variable_set('field_bundle_settings_comment__comment_node_cmtls_app', $settings);

  $settings = variable_get('field_bundle_settings_comment__comment_node_cmtls_location', array());
  $settings['view_modes']['cmtls_teaser']['custom_settings'] = TRUE;
  variable_set('field_bundle_settings_comment__comment_node_cmtls_location', $settings);

  cmtls_install_timeago();

  // Add updates.
  cmtls_update_7201();
  cmtls_update_7203();
}

function cmtls_modules_enabled($modules) {
  // Schedule the first daily mail
  if (in_array('rules_scheduler', $modules)) {
    rules_scheduler_schedule_task(array(
      'date' => strtotime('+1 day 14:00'),
      'config' => 'rules_cmtls_daily_newsletter',
      'state' => new RulesState(),
      'identifier' => 'CT daily newsletter',
    ));
  }
}

/**
 * Update 2.0-beta2
 */
function cmtls_update_7201() {
  // Create the folder for Facebook avatars.
  drupal_mkdir('public://fb_avatars');
}

/**
 * Update 2.0-beta3
 */
function cmtls_update_7202() {
  // Add new modules.
  module_enable(array(
    'geofield',
    'geophp',
    'addressfield',
    'openlayers',
    'openlayers_views',
  ));

  // Revert features so the geofield and addressfield will become available.
  cmtls_features_revert(array('cmtls'));

  // Convert locations to geofields and addressfields.
  $nodes = node_load_multiple(array(), array(
    'type' => 'cmtls_location',
  ));
  $nodes += node_load_multiple(array(), array(
    'type' => 'cmtls_group',
  ));
  $nodes += node_load_multiple(array(), array(
    'type' => 'cmtls_app',
  ));

  if(sizeof($nodes)) {
    cmtls_convert_node_location($nodes);
  }

  // Delete location fields.
  $instance = field_info_instance('node', 'field_cmtls_location', 'cmtls_group');
  field_delete_instance($instance);

  $instance = field_info_instance('node', 'field_cmtls_location', 'cmtls_app');
  field_delete_instance($instance);

  $instance = field_info_instance('node', 'field_cmtls_location', 'cmtls_location');
  field_delete_instance($instance);

  field_purge_batch(100);

  cmtls_install_timeago();
}

/**
 * Installs timeago module and creates default settings.
 */
function cmtls_install_timeago() {
  // Add modules.
  module_enable(array(
    'libraries',
    'timeago',
  ));

  // Create timeago formats based on existing date format.
  $format = '<\s\p\a\n \c\l\a\s\s="\t\i\m\e\a\g\o" \t\i\t\l\e="c">l, j F Y - H:i</\s\p\a\n>';

  variable_set('timeago_comment', 0);
  variable_set('timeago_node', 0);
  variable_set('timeago_elem', 'span');
  variable_set('date_format_cmtls_timeago', $format);

  db_insert('date_format_type')
    ->fields(array(
      'title' => 'CT timeago',
      'type' => 'cmtls_timeago',
      'locked' => 1,
    ))
    ->execute();
}

/**
 * Update 2.0-beta4 add the CT features module.
 */
function cmtls_update_7203() {
  // Add new modules.
  module_enable(array(
    'cmtls_features',
  ));
}

/**
 * Update 2.0-beta4 disable comment previews.
 */
function cmtls_update_7204() {
  variable_set('comment_preview_cmtls_group', 0);
  variable_set('comment_preview_cmtls_app', 0);
  variable_set('comment_preview_cmtls_location', 0);
}

/**
 * Update 2.0-beta4 add main group admin permission.
 */
function cmtls_update_7205() {
  $main_group = cmtls_get_main_group_node();
  $gid = og_get_group_ids('node', array($main_group->nid));
  $gid = array_shift($gid);

  $roles = og_roles($gid);

  foreach($roles as $rid => $role) {
    if($role == 'administrator member') {
      // admin
      cmtls_og_role_grant_permissions($rid, array(
        'access administration pages' => 'og',
      ));
    }
  }
}

/**
 * Update 2.0-beta4 add default map layers.
 */
function cmtls_update_7206() {
  cmtls_add_sample_layers();
}

/**
 * Update 2.0-beta4 add default map layer to existing content.
 */
function cmtls_update_7207() {
  // Revert features so the layer taxonomy will become available.
  cmtls_features_revert(array('cmtls_features'));

  // Get the nodes.
  $nodes = node_load_multiple(array(), array(
    'type' => 'cmtls_location',
  ));
  $nodes += node_load_multiple(array(), array(
    'type' => 'cmtls_group',
  ));
  $nodes += node_load_multiple(array(), array(
    'type' => 'cmtls_app',
  ));

  if(sizeof($nodes)) {
    cmtls_node_add_default_layer($nodes);
  }
}
