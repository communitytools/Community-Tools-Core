<?php
/**
 * @file
 * Code for the CT location feature.
 */

include_once('cmtls_location.features.inc');

/**
 * Implements hook_cmtls_app
 * 
 * @see cmtls.module
 */
function cmtls_location_cmtls_app() {
  return array(
    'cmtls_location' => array(
      'title' => t('Locations'),
      'description' => t('Locations'),
      'node types' => array(
        'cmtls_location' => t('Location'),
      ),
    ),
  );
}

/**
 * Implements hook_cmtls_app_config
 * 
 * @see cmtls.module
 */
function cmtls_location_cmtls_app_config($config) {
    
  $defaults = array(
    'sorting_field' => 'node_title',
    'sorting_dir' => 'ASC'
  );
  
  $settings = array_merge($defaults, isset($config['cmtls_location']) ? $config['cmtls_location'] : array());
  
  $form['cmtls_location'] = array(
    '#type' => 'fieldset',
    '#title' => t('Sorting settings'),
    '#collapsible' => TRUE,
    '#states' => array(
      'visible' => array(
        ':input[name="field_cmtls_app_type['.LANGUAGE_NONE.'][0][cmtls_app_type]"]' => array('value' => 'cmtls_location'),
      ),
    ),
  );

  $form['cmtls_location']['sorting_field'] = array(
    '#type' => 'radios',
    '#title' => t('Sorting field'),
    '#default_value' => $settings['sorting_field'],
    '#options' => array(
      'node_created' => t('Created date'),
      'node_title' => t('Location title'),
    ),
  );
  
  $form['cmtls_location']['sorting_dir'] = array(
    '#type' => 'radios',
    '#title' => t('Sorting order'),
    '#default_value' => $settings['sorting_dir'],
    '#options' => array(
      'ASC' => t('Ascending'),
      'DESC' => t('Descending'),
    ),
  );

  return $form;
}

function cmtls_location_menu() {
  $items = array();

  // creates autocomplete for locations
  $items['cmtls/location/ac'] = array(
    'title' => t('Location matching'),
    'page callback' => 'cmtls_location_autocomplete',
    'access arguments' => array('view content'),
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * 
 * adds location autocomplete to the location name field
 */
function cmtls_location_location_element_alter(&$element) {
  $element['name']['#attributes']['class'][] = 'cmtls-location-autocomplete';
  drupal_add_library('system', 'ui.autocomplete');  
}

/**
 * 
 * location names
 */
function cmtls_location_autocomplete($string = '') {
  $matches = array();
  
  if(strlen($string) > 1) {
    $query = db_select('location', 'location')
      ->fields('field_data_field_cmtls_location', array('entity_type', 'entity_id'))
      ->fields('location')
      ->condition('field_data_field_cmtls_location.bundle', 'cmtls_location', '=')
      ->condition('location.name', $string.'%', 'LIKE')
      ->range(0, 5);
    $query->join('field_data_field_cmtls_location', 'field_data_field_cmtls_location', 'location.lid = field_data_field_cmtls_location.field_cmtls_location_lid');
    $result = $query->execute();
    
    while($location = $result->fetchAssoc()) {
      // check for permissions ... is this right?
      if(entity_load_single($location['entity_type'], $location['entity_id'])) {
        if(isset($location['latitude']) && $location['latitude'] != 0.000000) {
          $location['locpick-user-latitude'] = $location['latitude'];
        }
        if(isset($location['longitude']) && $location['longitude'] != 0.000000) {
          $location['locpick-user-longitude'] = $location['longitude'];
        }
        $matches[] = $location;
      }
    }
  }
  
  drupal_json_output($matches);
}